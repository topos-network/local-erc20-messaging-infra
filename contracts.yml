version: "3.3"
services:
  # Get ConstAddressDeployer compiled contract (JSON file)
  contracts-init:
    image: ghcr.io/toposware/topos-smart-contracts:${TOPOS_MESSAGING_PROTOCOL_CONTRACTS_VERSION}
    container_name: contracts-init
    init: true
    volumes:
      - contracts:/usr/src/app/brownie/build/contracts
    networks:
      - full-msg-protocol-infra-docker

  contracts-topos:
    image: ghcr.io/toposware/topos-smart-contracts:${TOPOS_MESSAGING_PROTOCOL_CONTRACTS_VERSION}
    container_name: contracts-topos
    init: true
    environment:
      - PRIVATE_KEY=${PRIVATE_KEY}
      - TOKEN_DEPLOYER_SALT=${TOKEN_DEPLOYER_SALT}
      - TOPOS_CORE_SALT=${TOPOS_CORE_SALT}
      - TOPOS_CORE_PROXY_SALT=${TOPOS_CORE_PROXY_SALT}
      - SUBNET_REGISTRATOR_SALT=${SUBNET_REGISTRATOR_SALT}
    command: bash -c "
      npm run deploy2:topos-msg-protocol http://topos-node-1:8545 $$(cat /data/topos/data-1/consensus/validator.key) &&
      npm run deploy2 http://topos-node-1:8545 brownie/build/contracts/SubnetRegistrator.json $SUBNET_REGISTRATOR_SALT"
    volumes:
      - topos-data:/data/topos
    depends_on:
      topos-node-1:
        condition: service_healthy
    networks:
      - full-msg-protocol-infra-docker

  contracts-incal:
    image: ghcr.io/toposware/topos-smart-contracts:${TOPOS_MESSAGING_PROTOCOL_CONTRACTS_VERSION}
    container_name: contracts-incal
    init: true
    environment:
      - PRIVATE_KEY=${PRIVATE_KEY}
      - TOKEN_DEPLOYER_SALT=${TOKEN_DEPLOYER_SALT}
      - TOPOS_CORE_SALT=${TOPOS_CORE_SALT}
      - TOPOS_CORE_PROXY_SALT=${TOPOS_CORE_PROXY_SALT}
      - SUBNET_REGISTRATOR_SALT=${SUBNET_REGISTRATOR_SALT}
    command: bash -c "
      npm run deploy2:topos-msg-protocol http://incal-node-1:8545 $$(cat /data/incal/data-1/consensus/validator.key)"
    volumes:
      - incal-data:/data/incal
    depends_on:
      incal-node-1:
        condition: service_healthy
    networks:
      - full-msg-protocol-infra-docker

  contracts-edena:
    image: ghcr.io/toposware/topos-smart-contracts:${TOPOS_MESSAGING_PROTOCOL_CONTRACTS_VERSION}
    container_name: contracts-edena
    init: true
    environment:
      - PRIVATE_KEY=${PRIVATE_KEY}
      - TOKEN_DEPLOYER_SALT=${TOKEN_DEPLOYER_SALT}
      - TOPOS_CORE_SALT=${TOPOS_CORE_SALT}
      - TOPOS_CORE_PROXY_SALT=${TOPOS_CORE_PROXY_SALT}
      - SUBNET_REGISTRATOR_SALT=${SUBNET_REGISTRATOR_SALT}
    command: bash -c "
      npm run deploy2:topos-msg-protocol http://edena-node-1:8545 $$(cat /data/edena/data-1/consensus/validator.key)"
    volumes:
      - edena-data:/data/edena
    depends_on:
      edena-node-1:
        condition: service_healthy
    networks:
      - full-msg-protocol-infra-docker

volumes:
  contracts:

version: "3.3"
services:
  # Get ConstAddressDeployer compiled contract (JSON file)
  contracts-init:
    image: ghcr.io/topos-protocol/topos-smart-contracts:${TOPOS_MESSAGING_PROTOCOL_CONTRACTS_VERSION}
    container_name: contracts-init
    init: true
    volumes:
      - contracts:/usr/src/app/artifacts/contracts
    networks:
      - local-erc20-messaging-infra-docker

  contracts-topos:
    image: ghcr.io/topos-protocol/topos-smart-contracts:${TOPOS_MESSAGING_PROTOCOL_CONTRACTS_VERSION}
    container_name: contracts-topos
    init: true
    environment:
      - PRIVATE_KEY=${PRIVATE_KEY}
      - TOKEN_DEPLOYER_SALT=${TOKEN_DEPLOYER_SALT}
      - TOPOS_CORE_SALT=${TOPOS_CORE_SALT}
      - TOPOS_CORE_PROXY_SALT=${TOPOS_CORE_PROXY_SALT}
      - ERC20_MESSAGING_SALT=${ERC20_MESSAGING_SALT}
      - SUBNET_REGISTRATOR_SALT=${SUBNET_REGISTRATOR_SALT}
      - INCAL_HOST_PORT=${INCAL_HOST_PORT}
      - INCAL_CHAIN_ID=${INCAL_CHAIN_ID}
      - INCAL_LOGO_URL=${INCAL_LOGO_URL}
    command: bash -c "
      printenv &&
      npx ts-node scripts/deploy-topos-msg-protocol http://topos-node-1:8545 $(cat /data/topos/node/node-1/consensus/validator.key) > /contracts/.env &&
      echo export SUBNET_REGISTRATOR_CONTRACT_ADDRESS=$(npx ts-node scripts/deploy-subnet-registrator http://topos-node-1:8545 $(cat /data/topos/node/node-1/consensus/validator.key) $SUBNET_REGISTRATOR_SALT 4000000) >> /contracts/.env &&
      source /contracts/.env &&
      npm run register-subnet http://topos-node-1:8545 $(printenv SUBNET_REGISTRATOR_CONTRACT_ADDRESS) Incal $INCAL_CHAIN_ID http://localhost:$INCAL_HOST_PORT ws://localhost:$INCAL_HOST_PORT/ws INCA $INCAL_LOGO_URL $(cat /data/topos/node/node-1/consensus/validator.key) $(cat /data/incal/data-1/consensus/validator.key)"
    volumes:
      - contracts:/contracts
      - topos-data:/data/topos
      - incal-data:/data/incal
    depends_on:
      contracts-init:
        condition: service_completed_successfully
      topos-node-1:
        condition: service_healthy
      incal-node-1:
        condition: service_healthy
    networks:
      - local-erc20-messaging-infra-docker

  contracts-incal:
    image: ghcr.io/topos-protocol/topos-smart-contracts:${TOPOS_MESSAGING_PROTOCOL_CONTRACTS_VERSION}
    container_name: contracts-incal
    init: true
    environment:
      - PRIVATE_KEY=${PRIVATE_KEY}
      - TOKEN_DEPLOYER_SALT=${TOKEN_DEPLOYER_SALT}
      - TOPOS_CORE_SALT=${TOPOS_CORE_SALT}
      - TOPOS_CORE_PROXY_SALT=${TOPOS_CORE_PROXY_SALT}
      - ERC20_MESSAGING_SALT=${ERC20_MESSAGING_SALT}
      - SUBNET_REGISTRATOR_SALT=${SUBNET_REGISTRATOR_SALT}
    command: bash -c "
      npm run deploy:topos-msg-protocol http://incal-node-1:8545 $$(cat /data/incal/data-1/consensus/validator.key)"
    volumes:
      - incal-data:/data/incal
    depends_on:
      incal-node-1:
        condition: service_healthy
    networks:
      - local-erc20-messaging-infra-docker

volumes:
  contracts:

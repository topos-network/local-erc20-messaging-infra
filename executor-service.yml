version: "3.3"
services:
  redis:
    image: redis/redis-stack-server:latest
    container_name: redis
    init: true
    # ports:
    #   - "${REDIS_HOST_PORT}:6379"
    environment:
      - PRIVATE_KEY=${PRIVATE_KEY}
      - AUTH0_AUDIENCE=${AUTH0_AUDIENCE}
      - AUTH0_ISSUER_URL=${AUTH0_ISSUER_URL}
      - TOPOS_SUBNET_ENDPOINT=http://localhost:10002
      - SUBNET_REGISTRATOR_CONTRACT_ADDRESS=${SUBNET_REGISTRATOR_CONTRACT_ADDRESS}
      - TOPOS_CORE_CONTRACT_ADDRESS=${TOPOS_CORE_CONTRACT_ADDRESS}
      - TOPOS_MESSAGING_CONTRACT_ADDRESS=${TOPOS_MESSAGING_CONTRACT_ADDRESS}
    network_mode: "host"
    # extra_hosts:
    #   - "localhost:172.17.0.1"
    # networks:
    #   - full-msg-protocol-infra-docker

  executor-service:
    image: ghcr.io/toposware/executor-service:${EXECUTOR_SERVICE_VERSION}
    container_name: executor-service
    init: true
    ports:
      - "${EXECUTOR_SERVICE_HOST_PORT}:3000"
      # - "3000"
    environment:
      - PRIVATE_KEY=${PRIVATE_KEY}
      - AUTH0_AUDIENCE=${AUTH0_AUDIENCE}
      - AUTH0_ISSUER_URL=${AUTH0_ISSUER_URL}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      # - REDIS_PORT=${REDIS_HOST_PORT}
      - TOPOS_SUBNET_ENDPOINT=http://localhost:10002
      - SUBNET_REGISTRATOR_CONTRACT_ADDRESS=${SUBNET_REGISTRATOR_CONTRACT_ADDRESS}
      - TOPOS_CORE_CONTRACT_ADDRESS=${TOPOS_CORE_CONTRACT_ADDRESS}
      - TOPOS_MESSAGING_CONTRACT_ADDRESS=${TOPOS_MESSAGING_CONTRACT_ADDRESS}
    network_mode: "host"
    # extra_hosts:
    #   - "localhost:172.17.0.1"
    # networks:
    #   - full-msg-protocol-infra-docker
